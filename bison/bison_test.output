Terminals unused in grammar

    "identifier"
    "break"
    "case"
    "char"
    "const"
    "continue"
    "default"
    "do"
    "double"
    "else"
    "enum"
    "extern"
    "float"
    "for"
    "goto"
    "if"
    "int"
    "long"
    "register"
    "return"
    "short"
    "signed"
    "sizeof"
    "static"
    "struct"
    "switch"
    "typedef"
    "union"
    "unsigned"
    "void"
    "volatile"
    "__Packed"
    ")"
    "["
    "]"
    "{"
    "}"
    ";"


Grammar

    0 $accept: program "end of input"

    1 program: "while" "(" "integer" "letter" "integer"


Terminals, with rules where they appear

    "end of input" (0) 0
    error (256)
    "identifier" <string> (258)
    "letter" <string> (259) 1
    "integer" <string> (260) 1
    "break" (261)
    "case" (262)
    "char" (263)
    "const" (264)
    "continue" (265)
    "default" (266)
    "do" (267)
    "double" (268)
    "else" (269)
    "enum" (270)
    "extern" (271)
    "float" (272)
    "for" (273)
    "goto" (274)
    "if" (275)
    "int" (276)
    "long" (277)
    "register" (278)
    "return" (279)
    "short" (280)
    "signed" (281)
    "sizeof" (282)
    "static" (283)
    "struct" (284)
    "switch" (285)
    "typedef" (286)
    "union" (287)
    "unsigned" (288)
    "void" (289)
    "volatile" (290)
    "while" (291) 1
    "__Packed" (292)
    "(" (293) 1
    ")" (294)
    "[" (295)
    "]" (296)
    "{" (297)
    "}" (298)
    ";" (299)


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    program (46)
        on left: 1
        on right: 0


State 0

    0 $accept: • program "end of input"

    "while"  shift, and go to state 1

    program  go to state 2


State 1

    1 program: "while" • "(" "integer" "letter" "integer"

    "("  shift, and go to state 3


State 2

    0 $accept: program • "end of input"

    "end of input"  shift, and go to state 4


State 3

    1 program: "while" "(" • "integer" "letter" "integer"

    "integer"  shift, and go to state 5


State 4

    0 $accept: program "end of input" •

    $default  accept


State 5

    1 program: "while" "(" "integer" • "letter" "integer"

    "letter"  shift, and go to state 6


State 6

    1 program: "while" "(" "integer" "letter" • "integer"

    "integer"  shift, and go to state 7


State 7

    1 program: "while" "(" "integer" "letter" "integer" •

    $default  reduce using rule 1 (program)
